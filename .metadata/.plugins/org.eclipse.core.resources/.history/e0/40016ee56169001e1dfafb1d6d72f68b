package edu.kh.project.myPage.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttribute;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import edu.kh.project.member.model.dto.Member;
import edu.kh.project.myPage.model.service.MyPageService;

@SessionAttributes({"loginMember"})
// 1) Model�뿉 �꽭�똿�맂 媛믪쓽 key�� {} �옉�꽦�맂 媛믪씠 �씪移섑븯硫� session scope濡� �씠�룞
// 2) Session�쑝濡� �삱�젮�몦 媛믪쓣 �빐�떦 �겢�옒�뒪�뿉�꽌 �뼸�뼱�� �궗�슜 媛��뒫�븯寃뚰븿
//	-> @SessionAttribute(key)濡� �궗�슜
@RequestMapping("/myPage")
@Controller
public class MyPageController {
	
	@Autowired
	private MyPageService service;
	
	
	// �궡 �젙蹂� �럹�씠吏�濡� �씠�룞
	@GetMapping("/info")
	public String info() {
		return "myPage/myPage-info";
	}
	
	// �봽濡쒗븘 �럹�씠吏� �씠�룞
	@GetMapping("/profile")
	public String profile() {
		return "myPage/myPage-profile";
	}
	
	
	// 鍮꾨�踰덊샇 蹂�寃� �럹�씠吏� �씠�룞
	@GetMapping("/changePw")
	public String changePw() {
		return "myPage/myPage-changePw";
	}
	
	// �깉�눜 �럹�씠吏� �씠�룞
	@GetMapping("/secession")
	public String secession() {
		return "myPage/myPage-secession";
	}
	
	
	// �쉶�썝 �젙蹂� �닔�젙
	@PostMapping("/info")
	public String updateInfo(@SessionAttribute("loginMember") Member loginMember,
							Member updateMember,
							String[] memberAddress,
							RedirectAttributes ra) {
		
		/*
		 * @SessionAttribute("loginMember") Member loginMember
		 *  : Session�뿉�꽌 �뼸�뼱�삩 "loginMember"�뿉 �빐�떦�븯�뒗 媛앹껜瑜�
		 *    留ㅺ컻蹂��닔 Member loginMember�뿉 ���옣
		 * 
		 * Member updateMember
		 * : �닔�젙�븷 �땳�꽕�엫, �쟾�솕踰덊샇 �떞湲� 而ㅻ㎤�뱶 媛앹껜
		 * 
		 * 
		 * String[] memberAddress 
		 * : name="memberAddress"�씤 input 3媛쒖쓽 媛�(二쇱냼)
		 * 
		 * 
		 * RedirectAttributes ra : 由щ떎�씠�젆�듃 �떆 媛� �쟾�떖�슜 媛앹껜
		 * 
		 * */
		
		// 二쇱냼 �븯�굹濡� �빀移섏옄 (a^^^b^^^c)
		if(updateMember.getMemberAddress().equals(",,")) {
			updateMember.setMemberAddress(null);
		}else {
			// updateMember �뿉 二쇱냼臾몄옄�뿴 �꽭�똿
			String addr = String.join("^^^", memberAddress);
			updateMember.setMemberAddress(addr);
		}
		
		// 濡쒓렇�씤�븳 �쉶�썝�쓽 踰덊샇瑜� updateMember�뿉 �꽭�똿
		updateMember.setMemberNo( loginMember.getMemberNo() );
		
		
		// DB �쉶�썝 �젙蹂� �닔�젙 (update) �꽌鍮꾩뒪 �샇異�
		int result = service.updateInfo(updateMember);
		
		String message = null;
		
		// 寃곌낵媛믪쑝濡� �꽦怨�
		if(result > 0) {
			// -> �꽦怨� �떆 Session�뿉 濡쒓렇�씤�맂 �쉶�썝 �젙蹂대룄 �닔�젙(�룞湲고솕)
			loginMember.setMemberNickname( updateMember.getMemberNickname() );
			loginMember.setMemberTel( updateMember.getMemberTel() );
			loginMember.setMemberAddress( updateMember.getMemberAddress() );
			
			message = "�쉶�썝 �젙蹂� �닔�젙 �꽦怨�";
			
			
		} else {
			// �떎�뙣�뿉 �뵲瑜� 泥섎━ 

			message = "�쉶�썝 �젙蹂� �닔�젙 �떎�뙣";
			
		}
		
		ra.addFlashAttribute("message", message);
		
		return "redirect:info"; // �긽��寃쎈줈 (/myPage/info)
	}
	
	
	/*
	 * MultipartFile : input type ="file"로 제출된 파일을 저장하는 객체
	 * 
	 *  제공 메서드
	 *  - transferTo() : 파일을 지정된 경로에 저장(메모리 --> SSD)
	 *  
	 * 
	 */
	
	@PostMapping("/profile")
	public String updateProfile(
			@RequestParam("profileImage") MultipartFile profileImage // 업로드 파일
			
			) {
		
		//웹 접근 경로 :: 이미지 webapp에 접근 
		String webPath : "/resources/images/member/"'
		
	}
	
	
	
	
	
	
	
	
}
